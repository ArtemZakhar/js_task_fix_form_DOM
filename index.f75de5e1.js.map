{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,MAAM,gBAAgB,CAAC;IACrB,IAAI,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,GAAG,CAAC;IAE/C,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,KAAK,EAAG;QAC9C,MAAM,OAAO,WAAW,CAAC,EAAE;QAE3B,IAAI,KAAK,WAAW,OAAO,MAAM;YAC/B,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC;YACrB;QACF;QAEA,WAAW;IACb;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,CAAC,CAAC;IACd,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,MAAM,aAAa,MAAM,EAAE;IAC3B,MAAM,eAAe,cAAc,MAAM,IAAI;IAE7C,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,SAAS,OAAO,GAAG;IACnB,SAAS,WAAW,GAAG;IACvB,MAAM,aAAa,CAAC,qBAAqB,CAAC,cAAc;IAExD,MAAM,WAAW,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC;AACpD","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nconst inputModifier = (initialName) => {\n  let newName = `${initialName[0].toUpperCase()}`;\n\n  for (let i = 1; i < initialName.length; i += 1) {\n    const char = initialName[i];\n\n    if (char.toUpperCase() === char) {\n      newName += ` ${char}`;\n      continue;\n    }\n\n    newName += char;\n  }\n\n  return newName;\n};\n\ninputs.forEach((input) => {\n  const newLabel = document.createElement('label');\n  const newLabelId = input.id;\n  const newLabelName = inputModifier(input.name);\n\n  newLabel.classList.add('field-label');\n  newLabel.htmlFor = newLabelId;\n  newLabel.textContent = newLabelName;\n  input.parentElement.insertAdjacentElement('afterbegin', newLabel);\n\n  input.placeholder = `Please write ${newLabelName}`;\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}